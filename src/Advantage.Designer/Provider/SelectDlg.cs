using System;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Windows.Forms;

namespace Advantage.Data.Provider
{
    public class SelectDlg : Form
    {
        private const string strAllColumns = "* (all columns)";
        private Button mCancelButton;
        private Button mOkButton;
        private Label mInstructLabel;
        private Label mTableLabel;
        private CheckedListBox mColumnCheckList;
        private Label mColumnLabel;
        private CheckBox mWhereCheck;
        private TextBox mWhereTextBox;
        private TextBox mTableTextBox;
        private Button mTableBrowseButton;
        private IContainer components;
        private SelectTableDlg mSelectTableDlg;
        private string mstrSelect = "";
        private string mstrTableName = "";
        private string mstrConnectionString = "";
        private bool bFirstActivation = true;
        private string[] mstraSelectedColumns;

        public SelectDlg(string strConnectionString, string strSelectQuery)
        {
            InitializeComponent();
            mSelectTableDlg = new SelectTableDlg(strConnectionString);
            mstrConnectionString = strConnectionString;
            mstrSelect = strSelectQuery.Trim();
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing && components != null)
                components.Dispose();
            base.Dispose(disposing);
        }

        private void InitializeComponent()
        {
            mCancelButton = new Button();
            mOkButton = new Button();
            mInstructLabel = new Label();
            mTableLabel = new Label();
            mColumnCheckList = new CheckedListBox();
            mColumnLabel = new Label();
            mWhereCheck = new CheckBox();
            mWhereTextBox = new TextBox();
            mTableTextBox = new TextBox();
            mTableBrowseButton = new Button();
            SuspendLayout();
            mCancelButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            mCancelButton.DialogResult = DialogResult.Cancel;
            mCancelButton.Location = new Point(184, 304);
            mCancelButton.Name = "mCancelButton";
            mCancelButton.Size = new Size(64, 23);
            mCancelButton.TabIndex = 17;
            mCancelButton.Text = "Cancel";
            mOkButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            mOkButton.Location = new Point(112, 304);
            mOkButton.Name = "mOkButton";
            mOkButton.Size = new Size(64, 23);
            mOkButton.TabIndex = 16;
            mOkButton.Text = "OK";
            mOkButton.Click += mOkButton_Click;
            mInstructLabel.Location = new Point(8, 8);
            mInstructLabel.Name = "mInstructLabel";
            mInstructLabel.Size = new Size(248, 40);
            mInstructLabel.TabIndex = 19;
            mInstructLabel.Text =
                "Simple SELECT commands can be generated by selecting a table and the desired fields.";
            mTableLabel.Location = new Point(8, 48);
            mTableLabel.Name = "mTableLabel";
            mTableLabel.Size = new Size(168, 16);
            mTableLabel.TabIndex = 20;
            mTableLabel.Text = "&Table or View:";
            mColumnCheckList.Anchor =
                AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
            mColumnCheckList.CheckOnClick = true;
            mColumnCheckList.Enabled = false;
            mColumnCheckList.Location = new Point(8, 112);
            mColumnCheckList.Name = "mColumnCheckList";
            mColumnCheckList.Size = new Size(240, 124);
            mColumnCheckList.TabIndex = 23;
            mColumnLabel.Enabled = false;
            mColumnLabel.Location = new Point(8, 96);
            mColumnLabel.Name = "mColumnLabel";
            mColumnLabel.Size = new Size(160, 16);
            mColumnLabel.TabIndex = 24;
            mColumnLabel.Text = "Select &Columns:";
            mWhereCheck.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
            mWhereCheck.Location = new Point(8, 254);
            mWhereCheck.Name = "mWhereCheck";
            mWhereCheck.Size = new Size(176, 16);
            mWhereCheck.TabIndex = 25;
            mWhereCheck.Text = "Add &WHERE clause";
            mWhereCheck.CheckedChanged += mWhereCheck_CheckedChanged;
            mWhereTextBox.Anchor = AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
            mWhereTextBox.Enabled = false;
            mWhereTextBox.Location = new Point(8, 272);
            mWhereTextBox.Name = "mWhereTextBox";
            mWhereTextBox.Size = new Size(240, 20);
            mWhereTextBox.TabIndex = 26;
            mWhereTextBox.Text = "";
            mTableTextBox.Anchor = AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right;
            mTableTextBox.Enabled = false;
            mTableTextBox.Location = new Point(8, 64);
            mTableTextBox.Name = "mTableTextBox";
            mTableTextBox.Size = new Size(184, 20);
            mTableTextBox.TabIndex = 27;
            mTableTextBox.Text = "";
            mTableBrowseButton.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            mTableBrowseButton.Location = new Point(192, 64);
            mTableBrowseButton.Name = "mTableBrowseButton";
            mTableBrowseButton.Size = new Size(56, 21);
            mTableBrowseButton.TabIndex = 28;
            mTableBrowseButton.Text = "&Select";
            mTableBrowseButton.Click += mTableBrowseButton_Click;
            AcceptButton = mOkButton;
            AutoScaleBaseSize = new Size(5, 13);
            CancelButton = mCancelButton;
            ClientSize = new Size(256, 333);
            Controls.Add(mTableBrowseButton);
            Controls.Add(mTableTextBox);
            Controls.Add(mWhereTextBox);
            Controls.Add(mWhereCheck);
            Controls.Add(mColumnLabel);
            Controls.Add(mColumnCheckList);
            Controls.Add(mTableLabel);
            Controls.Add(mInstructLabel);
            Controls.Add(mCancelButton);
            Controls.Add(mOkButton);
            MaximizeBox = false;
            MinimizeBox = false;
            MinimumSize = new Size(264, 360);
            Name = nameof(SelectDlg);
            ShowInTaskbar = false;
            StartPosition = FormStartPosition.CenterParent;
            Text = "Build Select Query";
            Activated += SelectDlg_Activated;
            ResumeLayout(false);
        }

        private void GenerateColumnList()
        {
            mColumnCheckList.Items.Clear();
            Cursor.Current = Cursors.WaitCursor;
            mColumnCheckList.Items.Add("* (all columns)");
            if (mstraSelectedColumns != null)
            {
                if (mstraSelectedColumns[0].IndexOf('*', 0) != -1)
                {
                    var str = mstrTableName;
                    var num = mstrTableName.IndexOf("::");
                    if (num != -1)
                        str = mstrTableName.Remove(0, num + 2);
                    if (mstraSelectedColumns[0].StartsWith(str))
                    {
                        mstraSelectedColumns[0] = mstraSelectedColumns[0].Remove(0, str.Length);
                        if (mstraSelectedColumns[0] == " .*" || mstraSelectedColumns[0] == ".*")
                            mstraSelectedColumns[0] = "*";
                    }

                    if (mstraSelectedColumns[0] == "*")
                        mColumnCheckList.SetItemChecked(0, true);
                }
            }

            try
            {
                var adsDataReader =
                    new AdsDataAdapter("select * from [" + mstrTableName.Replace("::", "].[") + "]",
                            mstrConnectionString).SelectCommand
                        .ExecuteReader(CommandBehavior.SchemaOnly | CommandBehavior.KeyInfo);
                var schemaTable = adsDataReader.GetSchemaTable();
                adsDataReader.Close();
                foreach (DataRow row in (InternalDataCollectionBase)schemaTable.Rows)
                {
                    var strB = row[0].ToString();
                    var index = mColumnCheckList.Items.Add(strB);
                    if (mstraSelectedColumns != null)
                    {
                        foreach (var mstraSelectedColumn in mstraSelectedColumns)
                        {
                            if (string.Compare(mstraSelectedColumn, strB, true) == 0)
                            {
                                mColumnCheckList.SetItemChecked(index, true);
                                break;
                            }
                        }
                    }
                }

                mColumnCheckList.SelectedIndex = 0;
                mColumnCheckList.Enabled = true;
                mColumnLabel.Enabled = true;
                mOkButton.Enabled = true;
            }
            catch (Exception ex)
            {
                var num = (int)MessageBox.Show("Unable to retrieve column information.\n\n" + ex,
                    ConfigWizard.MessageBoxTitle, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }

            Cursor.Current = Cursors.Default;
        }

        private void mWhereCheck_CheckedChanged(object sender, EventArgs e)
        {
            mWhereTextBox.Enabled = mWhereCheck.Checked;
        }

        private void mOkButton_Click(object sender, EventArgs e)
        {
            if (!GetSelectCmd())
                return;
            DialogResult = DialogResult.OK;
            Close();
        }

        private bool GetSelectCmd()
        {
            mstrSelect = "SELECT ";
            if (mColumnCheckList.CheckedItems.Count == 0)
            {
                var num = (int)MessageBox.Show("No Columns were selected.", ConfigWizard.MessageBoxTitle,
                    MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                mColumnCheckList.Focus();
                return false;
            }

            var flag = true;
            foreach (var checkedItem in mColumnCheckList.CheckedItems)
            {
                if (!flag)
                    mstrSelect += ", ";
                flag = false;
                if (mColumnCheckList.Items[0] == checkedItem)
                {
                    if (mColumnCheckList.CheckedItems.Count > 1)
                    {
                        mstrSelect += "[";
                        var num = mstrTableName.IndexOf("::");
                        if (num != -1)
                            mstrSelect += mstrTableName.Remove(0, num + 2);
                        else
                            mstrSelect += mstrTableName;
                        mstrSelect += "].";
                    }

                    mstrSelect += "*";
                }
                else
                {
                    mstrSelect += "[";
                    mstrSelect += checkedItem.ToString();
                    mstrSelect += "]";
                }
            }

            mstrSelect += " FROM [";
            mstrSelect += mstrTableName.Replace("::", "].[");
            mstrSelect += "]";
            if (mWhereCheck.Checked)
            {
                var text = mWhereTextBox.Text;
                if (text.Length == 0)
                {
                    var num = (int)MessageBox.Show("WHERE clause is empty.", ConfigWizard.MessageBoxTitle,
                        MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    mWhereTextBox.Focus();
                    return false;
                }

                if (!text.ToUpper().TrimStart(null).StartsWith("WHERE"))
                    mstrSelect += " WHERE";
                var selectDlg = this;
                selectDlg.mstrSelect = selectDlg.mstrSelect + " " + mWhereTextBox.Text;
            }

            return true;
        }

        private void mTableBrowseButton_Click(object sender, EventArgs e)
        {
            if (mSelectTableDlg.ShowDialog(this) != DialogResult.OK)
                return;
            if (mstrTableName != mSelectTableDlg.TableName)
                mstraSelectedColumns = null;
            mstrTableName = mSelectTableDlg.TableName;
            mTableTextBox.Text = mstrTableName.Replace("::", ".");
            GenerateColumnList();
        }

        private void SelectDlg_Activated(object sender, EventArgs e)
        {
            if (!bFirstActivation)
                return;
            bFirstActivation = false;
            if (!ParseSelect() || !mSelectTableDlg.IsValidTableName(mstrTableName))
            {
                mstraSelectedColumns = null;
                if (mSelectTableDlg.ShowDialog(this) == DialogResult.OK)
                {
                    if (mstrTableName != mSelectTableDlg.TableName)
                        mstraSelectedColumns = null;
                    mstrTableName = mSelectTableDlg.TableName;
                    mTableTextBox.Text = mstrTableName.Replace("::", ".");
                    mstraSelectedColumns = null;
                    GenerateColumnList();
                }
                else
                {
                    DialogResult = DialogResult.Cancel;
                    Close();
                }
            }
            else
                GenerateColumnList();
        }

        private bool ParseSelect()
        {
            var lower = mstrSelect.ToLower();
            var str1 = "select ";
            if (lower.IndexOf(str1) != 0)
                return false;
            var length = str1.Length;
            var str2 = " from ";
            var num1 = lower.IndexOf(str2, length);
            if (num1 == -1)
                return false;
            mstraSelectedColumns = mstrSelect.Substring(length, num1 - length).Replace("[", "")
                .Replace("]", "").Replace("\"", "").Split(',');
            var startIndex = num1 + str2.Length;
            for (var index = 0; index < mstraSelectedColumns.Length; ++index)
                mstraSelectedColumns[index] = mstraSelectedColumns[index].Trim();
            var str3 = " where ";
            var num2 = lower.IndexOf(str3, startIndex);
            if (num2 == -1)
                num2 = lower.Length;
            mstrTableName = mstrSelect.Substring(startIndex, num2 - startIndex).Trim();
            mstrTableName = mstrTableName.Replace("].[", "::");
            mstrTableName = mstrTableName.Replace("\".\"", "::");
            mstrTableName = mstrTableName.Replace("[", "");
            mstrTableName = mstrTableName.Replace("]", "");
            mstrTableName = mstrTableName.Replace("\"", "");
            mTableTextBox.Text = mstrTableName.Replace("::", ".");
            if (num2 != lower.Length)
            {
                mWhereTextBox.Text = mstrSelect.Remove(0, num2 + str3.Length).Trim();
                mWhereCheck.Checked = true;
                mWhereTextBox.Enabled = true;
            }

            return true;
        }

        public string SelectQuery => mstrSelect;
    }
}