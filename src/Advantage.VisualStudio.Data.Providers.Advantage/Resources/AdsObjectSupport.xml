<?xml version="1.0" encoding="utf-8"?>
<!--
	Data object support describes a set of object types that can be used to
	represent the structure of the data source as an object model.  Underlying
	object types are specific to the data source and describe information that
	uniquely identifies instances of the type, properties of the type, and a set
	of services that can perform useful actions given the type.  Mapped object
	types describe a mapping from the underlying object types to generic types
	and properties, and can be consumed by data designers that do not have
	knowledge of any specific data source.
-->
<DataObjectSupport xmlns="http://schemas.microsoft.com/VisualStudio/2007/07/Data/DataObjectSupport">
   <!-- Underlying object types -->
   <Types>
      <!--
			Defines the root type, which represents one object with no identifier.
		-->
      <RootType>
         <!--
				Properties are represented simply by their name and type.  Note that
    			in this case the type is not specified, defaulting to "System.String".
         -->
			<Properties>
				<Property name="User" />
        <Property name="DataSource" />
			</Properties>

            <!--
				Services are represented by a type name (typically an interface) and
				a reference to some entity that implements it (typically a class).
				Methods called on the service may be passed parameters specified in
				the XML file, allowing the service to adapt depending on the context.
				The parameters expected by any given method are defined by and
				completely dependent on the service implementation.
			-->
         <Services>
            <!--
					This service provides the ability to select instances of this type.
					The service implementation specified here is supplied by this sample
					and provides better information than the basic sample.  This is the
					default implementation of this service registered by the sample so
					it does not need to be explicitly specified here, but it is shown
					anyway for sample purposes.
				-->
            <Service type="IVsDataObjectSelector" implementationType="Advantage.VisualStudio.Data.Providers.Advantage.AdsObjectSelector" />
         </Services>
      </RootType>

      <!--
			Defines a type that represents a table.  Notice the preferred ordering
			is on multiple identifier parts and specified as a comma-delimited list.
		-->
      <Type name="Table" preferredOrdering="Database, Schema, Name">
         <!--
				The identifier for a table contains multiple parts, indicating that a
				database name, a schema name and a table name are all required to
				uniquely identify the table object on the server.
			-->
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Schema" isIdentifierPart="true" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="GetSupportedRestrictions">
                  <Parameter value="Database" />
                  <Parameter value="Schema" />
                  <Parameter value="Name" />
               </Parameters>
               <Parameters method="SelectObjects">
                  <Parameter value="Tables" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="table_cat" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="table_schem" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="table_name" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
            <!--
					This service provides the ability to build a DSRef object for a
					given instance of this type.  DSRef objects can be placed on the
					clipboard and used to represent objects as they are copied and
					pasted, or dragged and dropped, from one location to another.  A
					default implementation of this service has been registered by the
					sample so it does not need to be explicitly specified here, but it
					is shown anyway for sample purposes.
				-->
            <Service type="IDSRefBuilder" implementationType="Microsoft.VisualStudio.Data.Framework.DSRefBuilder, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <!--
						The AppendToDSRef method in this implementation takes one or more
						parameters that specify how the DSRef tree should be built given
						values of identifier parts for an instance of this object type.
					-->
               <Parameters method="AppendToDSRef">
                  <!-- Top level parameters add nodes under the root node -->
                  <Parameter>
                     <!-- The node name (typically name of the object) -->
                     <Parameter value="{2}" />
                     <!-- The node owner (typically schema of the object) -->
                     <Parameter value="{1}" />
                     <!-- The node type (from the __DSREFTYPE enumeration) -->
                     <Parameter value="Table" />
                     <!-- The node extended type (not used very often) -->
                     <Parameter />
                     <!-- The node properties, identified by specific GUIDs -->
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="101" type="System.Int32" /> <!-- Table -->
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents a table column.
		-->
      <Type name="Column" preferredOrdering="Database, Schema, Table, Ordinal">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Table" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" type="System.Int32" />
            <Property name="DataType" />
            <Property name="MaxLength" type="System.Int32" />
            <Property name="Precision" type="System.Int16" />
            <Property name="Scale" type="System.Int16" />
            <Property name="IsNullable" type ="System.Boolean" />
            <Property name="ProviderTypeName" type="System.String" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="Columns" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="BaseCatalogName" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="BaseSchemaName" />
                     </Parameter>
                     <Parameter value="Table">
                        <Parameter value="BaseTableName" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="ColumnName" />
                     </Parameter>
                     <Parameter value="Ordinal">
                        <Parameter value="ColumnOrdinal" />
                     </Parameter>
                     <Parameter value="DataType">
                        <Parameter value="DataType" />
                     </Parameter>
                     <Parameter value="MaxLength">
                        <Parameter value="ColumnSize" />
                     </Parameter>
                     <Parameter value="Precision">
                        <Parameter value="NumericPrecision" />
                     </Parameter>
                     <Parameter value="Scale">
                        <Parameter value="NumericScale" />
                     </Parameter>
                     <Parameter value="IsNullable">
                        <Parameter value="AllowDBNull" />
                     </Parameter>
                     <Parameter value="ProviderTypeName">
                        <Parameter value="ProviderTypeName" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
            <Service type="IDSRefBuilder">
               <Parameters method="AppendToDSRef">
                  <Parameter>
                     <Parameter value="{2}" />
                     <Parameter value="{1}" />
                     <Parameter value="Table" />
                     <Parameter />
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="101" type="System.Int32" />
                           <!-- Table -->
                        </Parameter>
                     </Parameter>
                     <!-- This parameter specifies child nodes -->
                     <Parameter>
                        <Parameter>
                           <Parameter value="{3}" />
                           <Parameter />
                           <Parameter value="Field" />
                           <Parameter />
                           <Parameter>
                              <!-- GUID_DSRefProperty_PreciseType -->
                              <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                                 <Parameter value="102" type="System.Int32" />
                                 <!-- Table_Column -->
                              </Parameter>
                           </Parameter>
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents an index.
		-->
      <Type name="Index" preferredOrdering="Database, Schema, Table, Name">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Table" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="IsUnique" type="System.Boolean" />
            <Property name="IsPrimary" type="System.Boolean" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="Indexes"/>
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="Catalog" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="Schema" />
                     </Parameter>
                     <Parameter value="Table">
                        <Parameter value="Table" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="Name" />
                     </Parameter>
                     <Parameter value="IsUnique">
                        <Parameter value="IsUnique" />
                     </Parameter>
                     <Parameter value="IsPrimary">
                        <Parameter value="IsPrimary" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
            <Service type="IDSRefBuilder">
               <Parameters method="AppendToDSRef">
                  <Parameter>
                     <Parameter value="{2}" />
                     <Parameter value="{1}" />
                     <Parameter value="Table" />
                     <Parameter />
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="101" type="System.Int32" />
                           <!-- Table -->
                        </Parameter>
                     </Parameter>
                     <Parameter>
                        <Parameter>
                           <Parameter value="{3}" />
                           <Parameter />
                           <Parameter value="Index" />
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents an index column.
		-->
      <Type name="IndexColumn" preferredOrdering="Database, Schema, Table, Index, Ordinal">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Table" />
            <Part name="Index" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" type="System.Int32" />
         </Properties>
         <Services>
               <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                  <Parameters method="SelectObjects">
                     <Parameter value="IndexColumns"/>
                     <Parameter>
                        <Parameter value="Database">
                           <Parameter value="Catalog" />
                        </Parameter>
                        <Parameter value="Schema">
                           <Parameter value="Schema" />
                        </Parameter>
                        <Parameter value="Table">
                           <Parameter value="Table" />
                        </Parameter>
                        <Parameter value="Name">
                           <Parameter value="Name" />
                        </Parameter>
                        <Parameter value="Ordinal">
                           <Parameter value="ordinal" />
                        </Parameter>
                     </Parameter>
                  </Parameters>
               </Service>
               <Service type="IDSRefBuilder">
               <Parameters method="AppendToDSRef">
                  <Parameter>
                     <Parameter value="{2}" />
                     <Parameter value="{1}" />
                     <Parameter value="Table" />
                     <Parameter />
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="101" type="System.Int32" />
                           <!-- Table -->
                        </Parameter>
                     </Parameter>
                     <Parameter>
                        <Parameter>
                           <Parameter value="{3}" />
                           <Parameter />
                           <Parameter value="Index" />
                           <Parameter />
                           <Parameter />
                           <Parameter>
                              <Parameter>
                                 <Parameter value="{4}" />
                                 <Parameter />
                                 <Parameter value="Field" />
                              </Parameter>
                           </Parameter>
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>

      <!--
			Defines a type that represents a foreign key.
		-->
      <Type name="ForeignKey" preferredOrdering="Database, Schema, Table, Name">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Table" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="ReferencedTableSchema" />
            <Property name="ReferencedTableName" />
            <Property name="UpdateAction" type="System.Int16" />
            <Property name="DeleteAction" type="System.Int16" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="ForeignKeys"/>
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="Database" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="Schema" />
                     </Parameter>
                     <Parameter value="Table">
                        <Parameter value="Table" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="Name" />
                     </Parameter>
                     <Parameter value="ReferencedTableSchema">
                        <Parameter value="ReferencedTableSchema" />
                     </Parameter>
                     <Parameter value="ReferencedTableName">
                        <Parameter value="ReferencedTableName" />
                     </Parameter>
                     <Parameter value="UpdateAction">
                        <Parameter value="UpdateAction" />
                     </Parameter>
                     <Parameter value="DeleteAction">
                        <Parameter value="DeleteAction" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents a foreign key column.
		-->
      <Type name="ForeignKeyColumn" preferredOrdering="Database, Schema, Table, ForeignKey, Ordinal">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Table" />
            <Part name="ForeignKey" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" type="System.Int16" />
            <Property name="ReferencedColumnName" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="ForeignKeyColumns"/>
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="Database" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="Schema" />
                     </Parameter>
                     <Parameter value="Table">
                        <Parameter value="Table" />
                     </Parameter>
                     <Parameter value="ForeignKey">
                        <Parameter value="ForeignKey" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="Name" />
                     </Parameter>
                     <Parameter value="Ordinal">
                        <Parameter value="Ordinal" />
                     </Parameter>
                     <Parameter value="ReferencedColumnName">
                        <Parameter value="ReferencedColumnName" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>

      <!--
			Defines a type that represents a view.
		-->
      <Type name="View" preferredOrdering="Database, Schema, Name">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Schema" isIdentifierPart="true" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="Views" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="table_cat" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="table_schem" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="table_name" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
            <Service type="IDSRefBuilder">
               <Parameters method="AppendToDSRef">
                  <Parameter>
                     <Parameter value="{2}" />
                     <Parameter value="{1}" />
                     <Parameter value="View" />
                     <Parameter />
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="301" type="System.Int32" />
                           <!-- View -->
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents a view column.
		-->
      <Type name="ViewColumn" preferredOrdering="Database, Schema, View, Ordinal">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="View" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" type="System.Int32" />
            <Property name="DataType" />
            <Property name="MaxLength" type="System.Int32" />
            <Property name="Precision" type="System.Int16" />
            <Property name="Scale" type="System.Int16" />
            <Property name="IsNullable" type ="System.Boolean" />
            <Property name="ProviderTypeName" type="System.String" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="Columns" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="BaseCatalogName" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="BaseSchemaName" />
                     </Parameter>
                     <Parameter value="View">
                        <Parameter value="BaseTableName" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="ColumnName" />
                     </Parameter>
                     <Parameter value="Ordinal">
                        <Parameter value="ColumnOrdinal" />
                     </Parameter>
                     <Parameter value="DataType">
                        <Parameter value="DataType" />
                     </Parameter>
                     <Parameter value="MaxLength">
                        <Parameter value="ColumnSize" />
                     </Parameter>
                     <Parameter value="Precision">
                        <Parameter value="NumericPrecision" />
                     </Parameter>
                     <Parameter value="Scale">
                        <Parameter value="NumericScale" />
                     </Parameter>
                     <Parameter value="IsNullable">
                        <Parameter value="AllowDBNull" />
                     </Parameter>
                     <Parameter value="ProviderTypeName">
                        <Parameter value="ProviderTypeName" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
            <Service type="IDSRefBuilder">
               <Parameters method="AppendToDSRef">
                  <Parameter>
                     <Parameter value="{2}" />
                     <Parameter value="{1}" />
                     <Parameter value="View" />
                     <Parameter />
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="301" type="System.Int32" />
                           <!-- View -->
                        </Parameter>
                     </Parameter>
                     <Parameter>
                        <Parameter>
                           <Parameter value="{3}" />
                           <Parameter />
                           <Parameter value="Field" />
                           <Parameter />
                           <Parameter>
                              <!-- GUID_DSRefProperty_PreciseType -->
                              <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                                 <Parameter value="302" type="System.Int32" />
                                 <!-- View_Column -->
                              </Parameter>
                           </Parameter>
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>

      <Type name="StoredProcedure" preferredOrdering="Database, Schema, Name">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Schema" isIdentifierPart="true" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="StoredProcedures" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="PROCEDURE_CAT" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="PROCEDURE_SCHEM" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="PROCEDURE_NAME" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
            <Service type="IDSRefBuilder">
               <Parameters method="AppendToDSRef">
                  <Parameter>
                     <Parameter value="{2}" />
                     <Parameter value="{1}" />
                     <Parameter value="StoredProcedure" />
                     <Parameter />
                     <Parameter>
                        <!-- GUID_DSRefProperty_PreciseType -->
                        <Parameter value="39A5A7E7-513F-44a4-B79D-7652CD8962D9">
                           <Parameter value="401" type="System.Int32" />
                           <!-- Procedure -->
                        </Parameter>
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents a stored procedure parameter.
		-->
      <Type name="StoredProcedureParameter" preferredOrdering="Database, Schema, StoredProcedure, Ordinal">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="StoredProcedure" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" type="System.Int16" />
            <Property name="DataType" />
            <Property name="MaxLength" type="System.Int32" />
            <Property name="Precision" type="System.Byte" />
            <Property name="Scale" type="System.Int32" />
            <Property name="IsOutput" />
            <Property name="ProviderTypeName" type="System.String" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="StoredProcedureParameters" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="PROCEDURE_CAT" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="PROCEDURE_SCHEM" />
                     </Parameter>
                     <Parameter value="StoredProcedure">
                        <Parameter value="PROCEDURE_NAME" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="COLUMN_NAME" />
                     </Parameter>
                     <Parameter value="Ordinal">
                        <Parameter value="Column_Ordinal" />
                     </Parameter>
                     <Parameter value="DataType">
                        <Parameter value="DATA_TYPE" />                        
                     </Parameter>
                     <Parameter value="MaxLength">
                        <Parameter value="LENGTH" />
                     </Parameter>
                     <Parameter value="IsNullable">
                        <Parameter value="NULLABLE" />
                     </Parameter>
                     <Parameter value="IsOutput">
                        <Parameter value="IsOutputParameter" />
                     </Parameter>
                     <Parameter value="ProviderTypeName">
                        <Parameter value="TYPE_NAME" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>
      <!--
			Defines a type that represents a stored procedure column.
		-->
      <Type name="StoredProcedureColumn" preferredOrdering="Database, Schema, StoredProcedure, Ordinal">
         <Identifier>
            <Part name="Database" />
            <Part name="Schema" />
            <Part name="StoredProcedure" />
            <Part name="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" type="System.Int16" />
            <Property name="DataType" />
            <Property name="MaxLength" type="System.Int32" />
            <Property name="Precision" type="System.Int16" />
            <Property name="Scale" type="System.Int16" />
            <Property name="IsNullable" type="System.Boolean" />
            <Property name="ProviderTypeName" type="System.String" />
         </Properties>
         <Services>
            <Service type="IVsDataObjectSelector" implementationType="Microsoft.VisualStudio.Data.Framework.AdoDotNet.AdoDotNetObjectSelector, Microsoft.VisualStudio.Data.Framework, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
               <Parameters method="SelectObjects">
                  <Parameter value="StoredProcedureColumns" />
                  <Parameter>
                     <Parameter value="Database">
                        <Parameter value="PROCEDURE_CAT" />
                     </Parameter>
                     <Parameter value="Schema">
                        <Parameter value="PROCEDURE_SCHEM" />
                     </Parameter>
                     <Parameter value="StoredProcedure">
                        <Parameter value="PROCEDURE_NAME" />
                     </Parameter>
                     <Parameter value="Name">
                        <Parameter value="COLUMN_NAME" />
                     </Parameter>
                     <Parameter value="Ordinal">
                        <Parameter value="Column_Ordinal" />
                     </Parameter>
                     <Parameter value="DataType">
                        <Parameter value="DATA_TYPE" />
                     </Parameter>
                     <Parameter value="MaxLength">
                        <Parameter value="LENGTH" />
                     </Parameter>
                     <Parameter value="IsNullable">
                        <Parameter value="NULLABLE" />
                     </Parameter>
                     <Parameter value="ProviderTypeName">
                        <Parameter value="TYPE_NAME" />
                     </Parameter>
                  </Parameter>
               </Parameters>
            </Service>
         </Services>
      </Type>


   </Types>
   <!-- Mapped object types -->
   <MappedTypes>
      <!--
			The "Table" mapped type is a generic representation of object types that
			represent raw tabular data in a relational object model.  See the
			Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataTable
			type for more information.  The underlying type is obviously "Table".
		-->
      <MappedType name="Table" underlyingType="Table">
         <!--
				The selection element for a mapped type defines how to map a generic
				request for instances of the mapped type to restrictions, filter and
				ordering on the underlying type.  In this case, there is a one-to-one
				mapping between the Catalog, Schema and Name generic restrictions
				defined for this mapped type and the underlying Database, Schema and
				Name restrictions.  There is also an additional restriction on the
				table type to "BASE TABLE", ensuring only these types are returned.
			-->
         <Selection restrictions="{Catalog},{Schema},{Name}" />
         <!--
				The Identifier element for a mapped type defines how to represent a
				generic identifier in terms of an underlying identifier.  In this
				case it is simple; there is a one-to-one mapping between the Catalog,
				Schema and Name generic identifier defined for this mapped type and
				the underlying Database, Schema and Name identifier parts.
			-->
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <!--
				The Properties element for a mapped type defines how to represent
				generic properties in terms of underlying properties.
			-->
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Schema" isIdentifierPart="true" />
            <Property name="Type" underlyingMember="Schema">
               <!--
						The generic Type property is supposed to represent whether the
						table is a user or system table, with the strings "USER" and
						"SYSTEM" respectively.  There is no explicit information in the
						underlying type for this, but there is a heuristic based on the
						underlying Schema property value: if the table is in the
						INFORMATION_SCHEMA schema, then it must be a system table, else
						assume it is a user table.  To specify this, a Conversion element
						is used with one conversion step, which calculates the value.
					-->
               <Conversion>
                  <Calculate expr="IIF(NOT ({0} = 'SYSTEM TABLE'), 'USER', 'SYSTEM')" exprType="System.String" />
               </Conversion>
            </Property>
         </Properties>
      </MappedType>
      <!--
			The "TableColumn" mapped type is a generic representation of object
			types that represent columns in tables.  See the Microsoft.VisualStudio.
			Data.Services.RelationalObjectModel.IVsDataTableColumn type for more
			information.  Notice how the name of the mapped type and the underlying
			type are different in this case.
		-->
      <MappedType name="TableColumn" underlyingType="Column">
         <Selection restrictions="{Catalog},{Schema},{Table},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Table" underlyingMember="Table" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" underlyingMember="Ordinal"/>
            <Property name="UserDataType" underlyingMember="DataType" />
            <Property name="NativeDataType" underlyingMember="ProviderTypeName" />
            <Property name="AdoDotNetDataType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="AdoDotNetDbType" underlyingMember="ProviderTypeName">
               <!--
						The generic AdoDotNetDbType property is defined to be a value from
						the System.Data.DbType enumeration representing the column data
						type, when the DDEX provider technology is ADO .NET.  The default
						implementation of the IVsDataMappedObjectConverter interface is
						able to infer this value based on information in the ADO .NET
						DataTypes schema collection.
					-->
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="FrameworkDataType" underlyingMember="ProviderTypeName">
               <!--
						The generic FrameworkDataType property is defined to be a
						System.Type representation of the column data type.  The default
						implementation of the IVsDataMappedObjectConverter interface is
						able to produce this value based on information in the ADO .NET
						DataTypes schema collection.
					-->
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="Length" underlyingMember="MaxLength" />
            <Property name="Precision" underlyingMember="Precision">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <Property name="Scale" underlyingMember="Scale" />
            <Property name="IsNullable" underlyingMember="IsNullable" />

            <!--
					Notice that while the mapped type defines an IsComputed property,
					there is no property on the underlying type that supplies this
					information.  Only properties that can be mapped should be mapped;
					others should be omitted.  Therefore this property is not included.
				-->
            <!-- <Property name="IsComputed" underlyingMember="<none>" /> -->
            <!-- <Property name="DefaultValue" underlyingMember="DefaultValue" /> -->
         </Properties>
      </MappedType>
      <!--
			The "TableUniqueKey" mapped type is a generic representation of object
			types that represent unique keys in tables.  See the Microsoft.
			VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableUniqueKey
			type for more information.  Notice the mapping to the underlying type
			"Index"; in SQL Server all unique keys are represented as indexes.
		-->
      <MappedType name="TableUniqueKey" underlyingType="Index">
         <!--
				Since the underlying type represents objects with greater scope than
				just table unique keys, a filter must be supplied to ensure only the
				indexes that are unique get returned when selecting this mapped type.
			-->
         <Selection restrictions="{Catalog},{Schema},{Table},{Name}" filter="IsUnique = true" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Table" underlyingMember="Table" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="IsPrimary" underlyingMember="IsPrimary" />
         </Properties>
      </MappedType>
      <!--
			The "TableUniqueKeyColumn" mapped type is a generic representation of
			object types that represent unique keys in tables.  See the Microsoft.
			VisualStudio.Data.Services.RelationalObjectModel.
			IVsDataTableUniqueKeyColumn type for more information.  Notice the
			mapping to the underlying type "IndexColumns"; in SQL Server all unique
			key columns are represented as index columns.
		-->
      <MappedType name="TableUniqueKeyColumn" underlyingType="IndexColumn">
         <Selection restrictions="{Catalog},{Schema},{Table},{TableUniqueKey},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Table" underlyingMember="Table" />
            <Part name="TableUniqueKey" underlyingMember="Index" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" underlyingMember="Ordinal">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
         </Properties>
      </MappedType>
      <!--
			The "TableForeignKey" mapped type is a generic representation of object
			types that represent foreign keys in tables.  See the Microsoft.
			VisualStudio.Data.Services.RelationalObjectModel.IVsDataTableForeignKey
			type for more information.
		-->
      <MappedType name="TableForeignKey" underlyingType="ForeignKey">
         <Selection restrictions="{Catalog},{Schema},{Table},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Table" underlyingMember="Table" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <!--
				The properties for this mapped type are quite special in that they
				need to reference another table object.  The preferred method for
				doing this is to map generic properties representing the generic
				identifier of the referenced table.  When this is not possible, an
				alternative method is to map generic properties representing the
				underlying identifier of the referenced table.  For completeness
				purposes, it is recommended to specify both when possible.  This
				sample illustrates mapping both ways.
			-->
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="ReferencedTableId0" underlyingMember="Database" />
            <Property name="ReferencedTableId1" underlyingMember="ReferencedTableSchema" />
            <Property name="ReferencedTableId2" underlyingMember="ReferencedTableName" />
            <Property name="ReferencedTableCatalog" underlyingMember="Database" />
            <Property name="ReferencedTableSchema" underlyingMember="ReferencedTableSchema" />
            <Property name="ReferencedTableName" underlyingMember="ReferencedTableName" />
            <!--
					The update action is a value from the System.Data.Rule enumeration
					and it just happens that the underlying values are the same mapping.
				-->
            <Property name="UpdateAction" underlyingMember="UpdateAction">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <!--
					The delete action is a value from the System.Data.Rule enumeration
					and it just happens that the underlying values are the same mapping.
				-->
            <Property name="DeleteAction" underlyingMember="DeleteAction">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
         </Properties>
      </MappedType>
      <!--
			The "TableForeignKeyColumn" mapped type is a generic representation of
			object types that represent unique keys in tables.  See the Microsoft.
			VisualStudio.Data.Services.RelationalObjectModel.
			IVsDataTableForeignKeyColumn type for more information.
		-->
      <MappedType name="TableForeignKeyColumn" underlyingType="ForeignKeyColumn">
         <Selection restrictions="{Catalog},{Schema},{Table},{TableForeignKey},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Table" underlyingMember="Table" />
            <Part name="TableForeignKey" underlyingMember="ForeignKey" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" underlyingMember="Ordinal">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <Property name="ReferencedTableColumn" underlyingMember="ReferencedColumnName" />
         </Properties>
      </MappedType>

      <!--
			The "View" mapped type is a generic representation of object types that
			represent derived tabular data in a relational object model.  See the
			Microsoft.VisualStudio.Data.Services.RelationalObjectModel.IVsDataView
			type for more information.
		-->
      <MappedType name="View" underlyingType="View">
         <Selection restrictions="{Catalog},{Schema},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Schema" isIdentifierPart="true" />
         </Properties>
      </MappedType>
      <!--
			The "ViewColumn" mapped type is a generic representation of object
			types that represent columns in views.  See the Microsoft.VisualStudio.
			Data.Services.RelationalObjectModel.IVsDataColumn type for more
			information.
		-->
      <MappedType name="ViewColumn" underlyingType="ViewColumn">
         <Selection restrictions="{Catalog},{Schema},{View},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="View" underlyingMember="View" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" underlyingMember="Ordinal" />
            <Property name="UserDataType" underlyingMember="DataType" />
            <Property name="NativeDataType" underlyingMember="ProviderTypeName" />
            <Property name="AdoDotNetDataType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="AdoDotNetDbType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="FrameworkDataType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="Length" underlyingMember="MaxLength" />
            <Property name="Precision" underlyingMember="Precision">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <Property name="Scale" underlyingMember="Scale" />
            <Property name="IsNullable" underlyingMember="IsNullable" />
         </Properties>
      </MappedType>

      <MappedType name="StoredProcedure" underlyingType="StoredProcedure">
         <Selection restrictions="{Catalog},{Schema},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Schema" isIdentifierPart="true" />
         </Properties>
      </MappedType>
      <!--
			The "StoredProcedureParameter" mapped type is a generic representation
			of object types that represent parameters in stored procedures.  See the
			Microsoft.VisualStudio.Data.Services.RelationalObjectModel.
			IVsDataParameter type for more information.
		-->
      <MappedType name="StoredProcedureParameter" underlyingType="StoredProcedureParameter">
         <Selection restrictions="{Catalog},{Schema},{StoredProcedure},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="StoredProcedure" underlyingMember="StoredProcedure" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" underlyingMember="Ordinal">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <!--
					Based on the underlying metadata available, the generic direction
					property must be computed from two underlying members, which can be
					done by specifying the underlyingMembers attribute.
				-->
            <Property name="Direction" underlyingMembers="IsOutput">
               <Conversion>
                  <!--
							This calculation says if the Ordinal equals 0, it is a return
							value parameter.  Otherwise if IsOutput = false, it is an input
							parameter, else it is both input and output.
						-->
                  <Calculate expr="IIF({0} = false, 'IN', 'IN/OUT')" exprType="System.String" />
               </Conversion>
            </Property>
            <Property name="UserDataType" underlyingMember="DataType" />
            <Property name="NativeDataType" underlyingMember="ProviderTypeName" />
            <Property name="AdoDotNetDataType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="AdoDotNetDbType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="FrameworkDataType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="Length" underlyingMember="MaxLength" />
            <Property name="Precision" underlyingMember="Precision">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <Property name="Scale" underlyingMember="Scale" />
         </Properties>
      </MappedType>
      <!--
			The "StoredProcedureColumn" mapped type is a generic representation
			of object types that represent returned columns in stored procedures.
			See the Microsoft.VisualStudio.Data.Services.RelationalObjectModel.
			IVsDataColumn type for more information.
		-->
      <MappedType name="StoredProcedureColumn" underlyingType="StoredProcedureColumn">
         <Selection restrictions="{Catalog},{Schema},{StoredProcedure},{Name}" />
         <Identifier>
            <Part name="Catalog" underlyingMember="Database" />
            <Part name="Schema" underlyingMember="Schema" />
            <Part name="StoredProcedure" underlyingMember="StoredProcedure" />
            <Part name="Name" underlyingMember="Name" />
         </Identifier>
         <Properties>
            <Property name="Name" isIdentifierPart="true" />
            <Property name="Ordinal" underlyingMember="Ordinal" />
            <Property name="AdoDotNetDataType" underlyingMember="ProviderTypeName">
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="FrameworkDataType" underlyingMember="ProviderTypeName">
               <!--
						The generic FrameworkDataType property is defined to be a
						System.Type representation of the column data type.  The default
						implementation of the IVsDataMappedObjectConverter interface is
						able to produce this value based on information in the ADO .NET
						DataTypes schema collection.
					-->
               <Conversion>
                  <CallMapper />
               </Conversion>
            </Property>
            <Property name="Length" underlyingMember="MaxLength" />
            <Property name="Precision" underlyingMember="Precision">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <Property name="Scale" underlyingMember="Scale">
               <Conversion>
                  <ChangeType type="System.Int32" />
               </Conversion>
            </Property>
            <Property name="IsNullable" underlyingMember="IsNullable" />
         </Properties>
      </MappedType>
   </MappedTypes>
</DataObjectSupport>

